name: Deploy App to AWS (FakeCustomer)

on:
  workflow_dispatch:
    
jobs:
  fakecustomer-deploy:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: read
      statuses: write
    steps:
    - name: Get git output names
      id: git
      shell: bash
      run: |
        if [[ "${{ github.ref }}" != "refs/tags/"* ]]; then
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "::set-output name=current_branch::$HEAD_REF"
          else
            echo "::set-output name=current_branch::$REF_BRANCH"
          fi
        else
          REF=$(printf "%q" "${{ github.ref }}")
          REF_BRANCH=${REF/refs\/tags\/${{ inputs.strip_tag_prefix }}/}
          echo "::set-output name=current_branch::$(eval printf "%s" "$REF_BRANCH")"
        fi
    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@v2
      id: deployment
      with:
        token: '${{ github.token }}'
        environment: production
        ref: ${{ steps.git.outputs.current_branch }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Install serverless framework & dependencies
      run: |
        cd ./server
        npm i
        npm i -g serverless

    - name: Deploy serverless
      run: |
        cd ./server
        echo "Deploying to ${AWS_DEPLOY} environment"
        sls deploy --stage fakeCustomer


    
