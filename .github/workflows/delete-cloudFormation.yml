name: Destroy CloudFormation Stack

on:
  # push:
  #   branches:
  #    - main
  workflow_dispatch:
   inputs:
      Stack_Name:
        description: 'AWS CloudFormation stack name'
      Vultara_Stack_Name:
        description: 'vultaraStack \n authStack'
        required: true
        
      SOC_Stack_Name:
        description: ' SocStack, Let It Empty if not used'
        
      destroy_region:
        description: 'Enter the Region for destroying'
        required: true

jobs:
  # destroy-stack:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-2 # Replace with your AWS region

  #     - name: Delete CloudFormation Stack
  #       run: |
  #         if [ -n "${{ github.event.inputs.Stack_Name }}" ]; then
  #             echo "Start deletion Stack"
  #             aws cloudformation delete-stack --stack-name ${{ github.event.inputs.Stack_Name }}
  #             aws cloudformation wait stack-delete-complete --stack-name ${{ github.event.inputs.Stack_Name }} 
  #         else
  #             echo "The user not using SOC App" 
  #         fi
        # aws cloudformation get-template --stack-name ${{ github.event.inputs.Stack_Name }} --query TemplateBody --output text > current-template.yaml
        # chmod +w current-template.yaml
        # ls -la
        # sed -i'' -e 's/Retain/Delete/g' current-template.yaml            
        # cat current-template.yaml
        # aws cloudformation validate-template --template-body file://current-template.yaml
        #echo "after update"             aws cloudformation update-stack --stack-name ${{ github.event.inputs.Stack_Name }} --template-body file://current-template.yaml --capabilities CAPABILITY_IAM

  second-stack:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your AWS region

      # - name: Delete CloudFormation Stack
      #   run: |
      #       aws cloudformation get-template --stack-name ${{ github.event.inputs.Stack_Name }} > template.json
      #       resource=$(jq '.TemplateBody.Resources | to_entries[] | select(.value.DeletionPolicy == "Retain") | .key' template.json)
      #       if [ -n "$resource" ]; then
      #         echo "resource is: $resource"
      #       else
      #         echo "no resources"
      #       fi

      - name: Delete CloudFormation Stack
        run: |
            echo -e "${{ github.event.inputs.Stack_Name }}" > stack.txt
            vultara=$(sed -n '1p' stack.txt)
            auth=$(sed -n '2p' stack.txt)
            echo "$vultara"
            echo "auth is $auth"
            sdsd
        continue-on-error: true

      - name: Delete CloudFormation Stack
        run: |
            echo -e "${{ github.event.inputs.Stack_Name }}" > stack.txt
            vultara=$(sed -n '1p' stack.txt)
            auth=$(sed -n '2p' stack.txt)
            echo "$vultara"
            echo "auth is $auth"
            sdsd
        continue-on-error: true

      
      # - name: Delete CloudFormation Stack
      #   run: |
      #       aws cloudformation get-template --stack-name ${{ github.event.inputs.Stack_Name }} > template.json
      #       jq '.TemplateBody.Resources | to_entries[] | select(.value.DeletionPolicy == "Retain") | keys[] ' template.json
            
      # - name: delete
      #   run: |
      #     echo "Start deletion Stack"
      #     aws cloudformation delete-stack --stack-name ${{ github.event.inputs.Stack_Name }}
      #     aws cloudformation wait stack-delete-complete --stack-name ${{ github.event.inputs.Stack_Name }}
          
        # resources=$(aws cloudformation describe-stack-resources --stack-name ${{ github.event.inputs.Stack_Name }} --query 'StackResources[*].LogicalResourceId' --output text)
        # retained_resources=$(aws cloudformation describe-stack-resources --stack-name ${{ github.event.inputs.Stack_Name }} --query "StackResources[?ResourceType==\`$resources\`].LogicalResourceId" --output text)
        # echo "$retained_resources"


