# This is a basic workflow that is manually triggered

name: 0_New version and deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Type of new version (major / minor / patch)'
        # Input has to be provided for the workflow to run
        required: true
        type: choice
        options: 
        - patch
        - minor
        - major

      DeployTo:
        # Friendly description to be shown in the UI.
        description: 'Which environment you want to deploy, default Trial and Production'
        required: true
        type: choice
        default: 'Both'
        options: 
        - Both
        - Production_Only
        - Trial_Only
        - None
                

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "bump-version"
  bump-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check out the content (source branch).  Use a deploy key so that
    # when we push changes, it will trigger the release workflow
    # run that runs on: tag. (Using the GitHub token would
    # not run the workflow to prevent infinite recursion.)
    
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
         token: ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}
    
    - name: Install GitHub CLI
      run: sudo apt-get install -y gh
 
    - name: Authenticate GitHub CLI
      run: gh auth login --with-token <<< ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}

    - name: Initialize mandatory git config
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email $git_email
      env:
        git_email: "${{ github.actor }}@vultara.com"
    - name: bump version
      run: npm version ${{ github.event.inputs.version }} --tag-version-prefix=""

    - name: Push latest version
      run: git push origin main --follow-tags 

    - name: Deploy Release to both environment 'Trial and Production'
      run: |
        echo "environment=${{ github.event.inputs.DeployTo }}" >> $GITHUB_ENV
    
    - name: Trigger Both Environments.
      if: env.environment == 'Both'
      run: |
        gh workflow run production.yml
        gh workflow run trial.yml

    - name: Trigger Production Workflow
      if: env.environment == 'Production_Only'
      run: gh workflow run production.yml

    - name: Trigger Trial Workflow
      if: env.environment == 'Trial_Only'
      run: gh workflow run trial.yml

    - name: Merge prod_branch to pre-master branch.
      if: success()
      run: |
         gh pr merge prod_branch
      # gh pr create --base main --head prod_branch --title "Merge production into pre-master" --body "Merging changes from production into pre-master"
      # pr_url=$(gh pr list --base main --head prod_branch --json number --jq '.[0].url')
      #gh pr merge $pr_url  
