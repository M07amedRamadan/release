name: Auto Release Process_Do not Touch

on:
  push:
    tags:
      - '*'

jobs:

  create-github-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
      statuses: write
    # needs: publish
    outputs: 
      RELEASE_ID: ${{ steps.release.outputs.releaseId}}

    steps:
  
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
           token: ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}
      
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh
   
      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}
        
      - name: Extract version from branch name (for release branches)
        id: release
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#refs/tags/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: print the release ID
        run: |
            echo "the releaseID is= ${{ env.RELEASE_VERSION }} "
          
      - name: Create Release Notes
        uses: actions/github-script@v7
        with:
          github-token: ${{github.token}}
          script: |
              await github.request('POST /repos/${{ github.repository }}/releases', {
              tag_name: "${{ github.ref }}",
              name: "v${{ env.RELEASE_VERSION }} release",
              generate_release_notes: true
                });

      - name: add notes using GH-cli
        run: |
          gh release edit ${{ env.RELEASE_VERSION }} --notes "Old Notes"
 
        # Fetch existing release notes
        # Combine existing notes with new notes
        # Update the release with the combined notes
      - name: add notes using GH-cli
        run: |
          NEW_NOTES="New notes"
          existing_notes=$(gh api repos/:owner/:repo/releases/tags/${{ env.RELEASE_VERSION }} --jq '.body')
          echo "${existing_notes}"
          combined_notes="${NEW_NOTES} \\n\\n---\\n\\n ${existing_notes}"
          echo "${combined_notes}"
          gh release edit ${{ env.RELEASE_VERSION }} --notes "${combined_notes}"
                
