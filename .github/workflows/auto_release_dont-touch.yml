on:
  push:
    tags:
      - '*'

name: Auto Release Process_Do not Touch

jobs:
  # publish:
  #   name: Publish to npm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '14'
  #         cache: 'npm'
  #     - name: Publish
  #       run: |
  #         npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
  #         npm ci
  #         npm publish
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
      statuses: write
    # needs: publish

    steps:
      - name: Extract version from branch name (for release branches)
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#refs/tags/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Create Release Notes
        uses: actions/github-script@v7
        with:
          github-token: ${{github.token}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ github.ref }}",
              name: "v${{ env.RELEASE_VERSION }} release",
              generate_release_notes: true
            });


  append-release-notes:
    needs: create-github-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh
 
      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}

      - name: Append Release Notes
        run: |
          RELEASE_TAG=$(git describe --tags --abbrev=0)
          CURRENT_NOTES=$(gh release view $RELEASE_TAG --json body --jq .body)
          ADDITIONAL_NOTES="Additional notes here"
          UPDATED_NOTES="${CURRENT_NOTES}\n\n${ADDITIONAL_NOTES}"
          gh release edit $RELEASE_TAG --notes "$UPDATED_NOTES"
