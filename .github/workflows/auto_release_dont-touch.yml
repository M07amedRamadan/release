name: Auto Release Process_Do not Touch

on:
  workflow_run:
    workflows: ["0_New version and deploy"]
    types:
      - completed

jobs:
  # publish:
  #   name: Publish to npm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '14'
  #         cache: 'npm'
  #     - name: Publish
  #       run: |
  #         npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
  #         npm ci
  #         npm publish
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
      statuses: write
    # needs: publish
    outputs: 
      RELEASE_ID: ${{ steps.release.outputs.releaseId}}

    steps:
  
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
           token: ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}
      
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh
   
      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< ${{ secrets.VERSION_UPDATE_WORKFLOW_TOKEN }}
        
      - name: Extract version from branch name (for release branches)
        id: release
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#refs/tags/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: print the release ID
        run: |
            echo "the releaseID is= ${{ env.RELEASE_VERSION }} "
          
      - name: Create Release Notes
        uses: actions/github-script@v7
        with:
          github-token: ${{github.token}}
          script: |
              await github.request('POST /repos/${{ github.repository }}/releases', {
              tag_name: "${{ github.ref }}",
              name: "v${{ env.RELEASE_VERSION }} release",
              generate_release_notes: true
                });
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-data

      - name: Process data
        run: |
          Notes=$(cat my-data/data.txt)
          echo "Notes=$Notes" >> GITHUB_ENV
          echo "Processing data: ${{env.Notes}}"
          
      - name: add notes using GH-cli
        run: |
          gh release edit ${{ env.RELEASE_VERSION }} --notes ${{env.Notes}}
                

 
